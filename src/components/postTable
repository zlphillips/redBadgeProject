import React from 'react';
import { Table } from 'reactstrap';

const Example = (props) => {
  return (
    <Table borderless>
      <thead>
        <tr>
          <th>#</th>
          <th>First Name</th>
          <th>Last Name</th>
          <th>Username</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th scope="row">1</th>
          <td>Mark</td>
          <td>Otto</td>
          <td>@mdo</td>
        </tr>
        <tr>
          <th scope="row">2</th>
          <td>Jacob</td>
          <td>Thornton</td>
          <td>@fat</td>
        </tr>
        <tr>
          <th scope="row">3</th>
          <td>Larry</td>
          <td>the Bird</td>
          <td>@twitter</td>
        </tr>
      </tbody>
    </Table>
  );
}

export default Example;

------------------------------------------
TABLE W/ OG MIX
------------------------------------------

import React, {useState, useEffect} from 'react';
import {Table, Modal,ModalBody,ModalHeader,Button } from 'reactstrap'
import Comment from './Comment';
import { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';
// import PostBg from '../assets/postbg.png'
// import { Toast, ToastBody, ToastHeader, Modal, ModalHeader, ModalBody, Button } from 'reactstrap';

import './Post.css';
import { url } from 'inspector';
import { Tab } from 'react-bootstrap';


// import EditIcon from '@material-ui/icons/Edit';
// import Fab from '@material-ui/core/Fab';
// import UpdatePost from './EditPost'
// import { Base64 } from 'js-base64';
// import Typed from 'typed.js';



const Post = (props: any) => {
const [user, setUser] = useState('')
const [image, setImage] = useState('')
const [modal, setModal] = useState<any>(false);
const toggle = () => setModal(!modal);


function fetchUser (id: '')  {
         fetch(`http://localhost:3002/redBadge/user/${id}`, {
            method: 'GET',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': props.token
            }
        }).then((data) => data.json())
            .then((id) => {
              setUser(id.username)
            })
            .catch((err) => {
                console.log(err);
            });

        }
        useEffect(() => fetchUser(props.post.userId), [])


    const singleToast = {
        minWidth: '90vw',
        minHeight: '10vh',
        // margin: '2%'
     
    }


    const editStyles = {
        fload: 'right'
    }


const theme = createMuiTheme({
    palette: {
      primary: {
        light: '#F4F1DE',
        main: '#E07A5F',
        dark: '#3D405B',
        contrastText: '#F2CC8F',
      },
      secondary: {
        light: '#ff7961',
        main: '#f44336',
        dark: '#ba000d',
        contrastText: '#000',
      },
    },
  });
  

    function newBlob(photo: any) {
        const photoURL = String.fromCharCode.apply( null, new Uint8Array(photo) as any)
        return photoURL
    }
       

    return(
        <Table bordered>
        <thead>
          <tr>
            {/* <th>#</th> */}
            <th>{user}</th>
            <th>Last Name</th>
            <th>Username</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <th scope="row">
            <img src={`${newBlob(props.post.media.data)}`} 
                        style={{height:"30vh", overflow:"hidden"}}/>
            </th>
            <td>
            <h3>{props.post.likes}</h3>
            </td>
            <td>Otto</td>
            <td>@mdo</td>
          </tr>
          <tr>
            <th scope="row">
            <h3>{props.post.description}</h3>
            </th>
            <td>
            <Button onClick ={toggle} style={{margin: '2%'}}>Clapback</Button>
                         
                         <Modal isOpen={modal} toggle={toggle} className="header">
                         <ModalHeader toggle={toggle}>
                             Go get 'em you keyboard warrior!
                         </ModalHeader>
                         <ModalBody>
                         <Comment token={props.token}/>
                         </ModalBody>
                         </Modal>
            </td>
            <td>Thornton</td>
            <td>@fat</td>
          </tr>
          <tr>
            <th scope="row">3</th>
            <td>Larry</td>
            <td>the Bird</td>
            <td>@twitter</td>
          </tr>
        </tbody>
      </Table>
    )
}

export default Post;

------------------------------------------
// FULL OG POST CODE
------------------------------------------
import React, {useState, useEffect} from 'react';
// import { Toast, ToastBody, ToastHeader, Modal, ModalHeader, ModalBody, Button } from 'reactstrap';
// import Comment from './Comment';
import { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';
// import PostBg from '../assets/postbg.png'
import './Post.css';
import { url } from 'inspector';


// import EditIcon from '@material-ui/icons/Edit';
// import Fab from '@material-ui/core/Fab';
// import UpdatePost from './EditPost'
// import { Base64 } from 'js-base64';
// import Typed from 'typed.js';



const Post = (props: any) => {
const [user, setUser] = useState('')
const [image, setImage] = useState('')
const [modal, setModal] = useState<any>(false);
const toggle = () => setModal(!modal);


function fetchUser (id: '')  {
         fetch(`http://localhost:3002/redBadge/user/${id}`, {
            method: 'GET',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': props.token
            }
        }).then((data) => data.json())
            .then((id) => {
              setUser(id.username)
            })
            .catch((err) => {
                console.log(err);
            });

        }
        useEffect(() => fetchUser(props.post.userId), [])


    const singleToast = {
        minWidth: '90vw',
        minHeight: '10vh',
        // margin: '2%'
     
    }


    const editStyles = {
        fload: 'right'
    }


const theme = createMuiTheme({
    palette: {
      primary: {
        light: '#F4F1DE',
        main: '#E07A5F',
        dark: '#3D405B',
        contrastText: '#F2CC8F',
      },
      secondary: {
        light: '#ff7961',
        main: '#f44336',
        dark: '#ba000d',
        contrastText: '#000',
      },
    },
  });
  

    function newBlob(photo: any) {
        const photoURL = String.fromCharCode.apply( null, new Uint8Array(photo) as any)
        return photoURL
    }
       

    return(
        <div className='wholeToast'>
            <div>
                {/* <div
                style={{display:"flex"}}> */}
                    {/* USERNAME H1 */}
                        <h1 
                        style={{fontSize:"3vh"}}>{user}</h1>
                        {/* <div> */}
                            {/* <p>{`posted ${0} minutes ago`}</p> */}
                        {/* </div> */}
                {/* </div> */}
                {/* POST BODAY DIV */}
                      <div className='toastBody'> 
                        <img src={`${newBlob(props.post.media.data)}`} 
                        style={{height:"30vh", overflow:"hidden"}}/>
                        <h3>{props.post.description}</h3>
                        {/* <h3>{props.post.likes}</h3> */}
                     </div>
            </div>
                    {/* <div>
                        <Button onClick ={toggle} style={{margin: '2%'}}>Clapback</Button>
                         
                        <Modal isOpen={modal} toggle={toggle} className="header">
                        <ModalHeader toggle={toggle}>
                            Go get 'em you keyboard warrior!
                        </ModalHeader>
                        <ModalBody>
                        <Comment token={props.token}/>
                        </ModalBody>
                        </Modal>
                    </div>     */}
        </div>
    )
}

export default Post;



----------------------------
FINAL POST TABLE
----------------------------

import React, {useState, useEffect} from 'react';
import {Table, Modal,ModalBody,ModalHeader,Button, Input, Form,FormGroup,FormText } from 'reactstrap'
import Comment from './Comment';
import { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';
// import PostBg from '../assets/postbg.png'
// import { Toast, ToastBody, ToastHeader, Modal, ModalHeader, ModalBody, Button } from 'reactstrap';

import './Post.css';
import { url } from 'inspector';
import { Tab } from 'react-bootstrap';


// import EditIcon from '@material-ui/icons/Edit';
// import Fab from '@material-ui/core/Fab';
// import UpdatePost from './EditPost'
// import { Base64 } from 'js-base64';
// import Typed from 'typed.js';



const Post = (props: any) => {

const [user, setUser] = useState('')
const [image, setImage] = useState('')
const [modal, setModal] = useState<any>(false);
const toggle = () => setModal(!modal);


function fetchUser (id: '')  {
         fetch(`http://localhost:3002/redBadge/user/${id}`, {
            method: 'GET',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': props.token
            }
        }).then((data) => data.json())
            .then((id) => {
              setUser(id.username)
            })
            .catch((err) => {
                console.log(err);
            });

        }
        useEffect(() => fetchUser(props.post.userId), [])


    const singleToast = {
        minWidth: '90vw',
        minHeight: '10vh',
        // margin: '2%'
     
    }


    const editStyles = {
        fload: 'right'
    }

    const [likes, setLikes] = useState<number>();
    const [liked, setLiked] = useState<any>();

    class LikeButton extends React.Component {
        constructor(props: number) {
          super(props);
          this.state = {
            liked: false
          };
          this.handleClick = this.handleClick.bind(this);
        } 

        handleClick(id: any) {
            let like = props.post.likes
            console.log(id)
            setLikes(0)
            fetch(`http://localhost:3002/redBadge/post/${props.post.id}`, {
              method: 'PUT',
              body: JSON.stringify({ post: { likes: liked ? like - 1 : like + 1} }),
              headers: {
                  'Content-Type': 'application/json',
                  'Authorization': props.token
              }
          }).then((data) => data.json())
              .then((id) => {
                setLikes(id.likes)
                props.fetchAll()
              })
              .catch((err) => {
                  console.log(err);
              });
            liked? setLiked(false) : setLiked(true)
        };

        
        render() {
          const label = liked ? 'Unlike' : 'Like'
          return (
            <div className="customContainer">
              <button className="btn btn-primary" onClick={this.handleClick}>
                {label}</button>
            </div>
          );
        }
      }


// const theme = createMuiTheme({
//     palette: {
//       primary: {
//         light: '#F4F1DE',
//         main: '#E07A5F',
//         dark: '#3D405B',
//         contrastText: '#F2CC8F',
//       },
//       secondary: {
//         light: '#ff7961',
//         main: '#f44336',
//         dark: '#ba000d',
//         contrastText: '#000',
//       },
//     },
//   });
  

    function newBlob(photo: any) {
        const photoURL = String.fromCharCode.apply( null, new Uint8Array(photo) as any)
        return photoURL
    }
       

    return(
        <Table borderless className="postTable">
        <thead>
          <tr>
            {/* <th>#</th> */}
            <th>{user}</th>
          </tr>
        </thead>
        <tbody>
        <tr>
            <td scope="row">
              {/* image */}
              <img src={`${newBlob(props.post.media.data)}`}
              style={{maxHeight:"30vh", overflow:"hidden"}}/>
            </td>
            <td>
              {/* like count */}
              <h5>{props.post.likes}</h5>
              {/* like button */}
              <LikeButton />
              {/* comment button */}
              <Button onClick ={toggle} style={{margin: '2%'}}>Clapback</Button>                        
              <Modal isOpen={modal} toggle={toggle} className="header">
              <ModalHeader toggle={toggle}>
                  Go get 'em you keyboard warrior!
              </ModalHeader>
              <ModalBody>
              <Comment token={props.token} fetchAll={props.fetchAll} postId={props.post.id}/>
              </ModalBody>
              </Modal>
              {/* DELETE */}
            </td>
          </tr>
          <tr>
            <th scope="row" className="description">
            {/* post text */}
            <h5>{props.post.description}</h5>
            </th>
            <td>
            <Button className="delete">
                Delete
            </Button>
              </td>
          </tr>
          <tr>
            <th scope="row" className="col3">
            Comments Button here
            </th>
          </tr>
        </tbody>
      </Table>
    )
}

export default Post;



----------------------------------
POSTTTTTTTTTTTTTTTTTTT
---------------------------------

import React, { Component, useState, useEffect } from 'react';
import Post from './Post'
import Typed from 'react-typed';


export interface Posts {
    media: Blob,
    description: string,
    likes: number,
    userId: number,
    firstName: string,
    lastName: string,
    email: string,
    username: string,
    passwordhash: string
}



const Home = (props: any) => {
    const [posts, setPosts] = useState([] as any)
    // const [images, setImages] = useState([] as any)
  


//fetch all posts
    const fetchAll = () => {
        fetch('http://localhost:3002/redBadge/post/all-posts', {
            method: 'GET',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': props.token,
            }
        })
            .then(data => data.json())
            .then(data => { setPosts(data)})
            .catch(err => console.warn(err))

    }

//timeout to load posts
    useEffect(() => {
        const timer = setTimeout(() => {
         fetchAll()
        }, 1000);
        return () => clearTimeout(timer);
      }, []);


 const helloStyles = {
     fontSize: '5vh'
 }

    
    return (
        <div>
            <h1 className='element' ></h1>
            <Typed
                    style={helloStyles}
                    strings={['Hello there ...', 'Welcome, to 404']}
                    typeSpeed={100}
                />
                <br/>
            <div className="post_bg"
            style={{border:"1px solid red"}}>
                <div className="p-3 my-2 rounded" 
                style={{marginRight:"auto", marginLeft:"auto", border:"1px solid orange"}}>
                    {posts.map((post: Posts, index: number) => (
                        <Post post={post} index={index} token={props.token} fetchAll = {fetchAll}
                        // images={images} setImages={setImages}
                        />
                    ))}
                </div> 
            </div>
        </div>
    )
}

export default Home;